(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{322:function(t,o,i){"use strict";i.r(o);var l=i(7),v=Object(l.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("要使用 "),o("code",[t._v("sparsecheckout")]),t._v(" 功能，您需要按照以下步骤进行操作：")]),t._v(" "),o("ul",[o("li",[o("ol",[o("li",[t._v("首先，确保您正在使用 Git 版本 1.7.0 或更高版本。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"2"}},[o("li",[t._v("通过运行命令 "),o("code",[t._v("git clone")]),t._v(" 克隆远程仓库到本地，或者通过运行命令 "),o("code",[t._v("git init")]),t._v(" 在本地创建一个新的 Git 仓库。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"3"}},[o("li",[t._v("进入仓库所在的目录。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"4"}},[o("li",[t._v("运行命令 "),o("code",[t._v("git config core.sparsecheckout true")]),t._v(" 来启用稀疏检出模式。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"5"}},[o("li",[t._v("打开 "),o("code",[t._v(".git/info/sparse-checkout")]),t._v(" 文件（如果文件不存在，则新建该文件）。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"6"}},[o("li",[t._v("在该文件中的每一行，输入希望检出的目录或文件的相对路径。例如，如果您希望检出仓库中的 "),o("code",[t._v("docs")]),t._v(" 目录，则可以输入 "),o("code",[t._v("docs")]),t._v("。")])])]),t._v(" "),o("li",[o("ol",{attrs:{start:"7"}},[o("li",[t._v("运行命令 "),o("code",[t._v("git pull origin master")]),t._v(" 或 "),o("code",[t._v("git checkout")]),t._v(" 从远程仓库或指定分支获取稀疏检出的内容。")])])])])])}),[],!1,null,null,null);o.default=v.exports}}]);